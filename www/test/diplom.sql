-- phpMyAdmin SQL Dump
-- version 3.5.1
-- http://www.phpmyadmin.net
--
-- Хост: 127.0.0.1
-- Время создания: Янв 29 2014 г., 02:05
-- Версия сервера: 5.5.25
-- Версия PHP: 5.3.13

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- База данных: `diplom`
--

-- --------------------------------------------------------

--
-- Структура таблицы `kosyaki`
--

CREATE TABLE IF NOT EXISTS `kosyaki` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `kosyak` varchar(255) CHARACTER SET cp1251 COLLATE cp1251_general_cs NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- Дамп данных таблицы `kosyaki`
--

INSERT INTO `kosyaki` (`id`, `kosyak`) VALUES
(1, '0,40,37,37,39,17,31,41,25,30,16,12,15,22,28,29,18,11,8,9,9,9,9,9,9,9,9,9,9,9,12,25,26,18,19,37,38,36,40,35,41,39,39,13,16,27,25,23,11,38,9,37,22,35,34,41,33,17,10,14,15,27,25,35,20,21,17,11,34,28,38,15,14,41,30,32,37,12,10,8,16,29,34,32,27,19,24,37,26,30,');

-- --------------------------------------------------------

--
-- Структура таблицы `quests`
--

CREATE TABLE IF NOT EXISTS `quests` (
  `id` int(255) NOT NULL AUTO_INCREMENT,
  `quest` varchar(255) COLLATE cp1251_general_cs NOT NULL,
  `ans1` varchar(255) COLLATE cp1251_general_cs NOT NULL,
  `ans2` varchar(255) COLLATE cp1251_general_cs NOT NULL,
  `ans3` varchar(255) COLLATE cp1251_general_cs NOT NULL,
  `ans4` varchar(255) COLLATE cp1251_general_cs NOT NULL,
  `tans1` int(2) NOT NULL,
  `tans2` int(2) NOT NULL,
  `tans3` int(2) NOT NULL,
  `tans4` int(2) NOT NULL,
  `group` int(10) NOT NULL,
  `podgroup` int(10) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=cp1251 COLLATE=cp1251_general_cs AUTO_INCREMENT=45 ;

--
-- Дамп данных таблицы `quests`
--

INSERT INTO `quests` (`id`, `quest`, `ans1`, `ans2`, `ans3`, `ans4`, `tans1`, `tans2`, `tans3`, `tans4`, `group`, `podgroup`) VALUES
(8, 'Как называется дерево, выделяемое из графа', 'Остовное', 'Линейное', 'Упорядоченное', 'n-арное', 1, 0, 0, 0, 1, 1),
(9, 'Какое отношение между элементами характерно для дерева?', 'Число дуг на 1 меньше числа вершин', 'Число дуг равно числу вершин', 'Имеет хотя бы 1 цикл', 'Число циклов равно числу вершин ', 1, 0, 0, 0, 1, 1),
(10, 'Какая структура называется лесом?', 'Имеет хотя бы 1 узел, у которого нет исходного', 'Имеет несколько корней', 'Имеет огромное количество вершин.', 'Каждый переходной узел имеет более 2 потомков.', 1, 0, 0, 0, 1, 1),
(11, 'Какие деревья называются свободными?', 'между n узлами n-1 связей, все узлы связаны между собой', 'между n узлами n связей', 'между узлами может не быть связей', 'между n узлами n+1 связей	', 1, 0, 0, 0, 1, 1),
(12, 'Выбрать правильные утверждения для деревьев ориентированных  ', 'Есть корень', 'Начиная с корня, следуя по последовательности указателей, можно получить доступ к любому элементу', 'На каждый элемент есть только 1 ссылка', 'На каждый элемент кроме корня есть только одна ссылка', 1, 1, 0, 1, 1, 1),
(13, 'Что такое степень исхода узла?', 'Число сыновей у узла', 'Сумма сыновей и родителей узла', 'Количество братьев у узла', 'Сумма сыновей, братьев и родителей узла	', 1, 0, 0, 0, 1, 1),
(14, 'Какие деревья называются подобными?', 'Имеющие одинаковую структуру', 'Содержащие одинаковую информацию', 'Имеющие одинаковую глубину', 'Имеющие одинаковую высоту', 1, 0, 0, 0, 1, 1),
(15, 'Какие деревья называются эквивалентными?     ', 'Они подобны и вершины содержат одинаковую информацию', 'Содержащие одинаковую информацию', 'Имеющие одинаковую глубину', 'Имеющие одинаковую высоту ', 1, 0, 0, 0, 1, 1),
(16, 'Какое дерево называется вырожденным?', 'Дерево с 1 вершиной', 'Дерево с менее чем 3 вершинами', 'Зацикленное дерево', 'Глубина дерева не равна высоте дерева	', 1, 0, 0, 0, 1, 1),
(17, 'Какие деревья называются упорядоченными?', 'Порядок следования вершин любого яруса считается одинаковым.', 'Узлы следуют друг за другом в установленном порядке', 'Каждый узел имеет не более 2 потомков', 'Дерево не может изменяться со временем', 1, 0, 0, 0, 1, 1),
(18, 'Выберите графические формы представления деревьев.', 'Линейная', 'Дьюи', 'Прюфера', 'Графом', 0, 0, 0, 1, 1, 1),
(19, 'Чем отличаются бинарные деревья от случайных (рандомизированных) деревьев?', 'степень равна 2', 'степень равна 1', 'степень равна 3', 'степень равна 4', 1, 0, 0, 0, 2, 2),
(20, 'Что представляет собой полное бинарное дерево?', 'каждый узел последнего уровня является листом, а остальные узлы имеют непустые левое и правое поддеревья', 'каждый узел последнего уровня является листом, а остальные узлы имеют непустые левое и правое поддеревья', 'каждый узел имеет минимум 2 поддерева', 'каждый узел имеет ровно 2 поддерева', 1, 0, 0, 0, 2, 2),
(21, 'Какое удтверждение верно для почти полного бинарного дерева?', 'каждый лист имеет уровень h или h-1', 'каждый лист имеет уровень h', 'высота дерева прямо пропорциональна количеству его листов', 'на уровне h-1 могут находиться только узлы', 1, 0, 0, 0, 2, 2),
(22, 'на уровне h-1 могут находиться только узлы', 'да', 'нет', 'я знаю, но не могу выбрать', 'что такое дерево?', 1, 0, 0, 0, 2, 3),
(23, 'Перечислите виды обходов бинарных деревьев.', 'прямой', 'обратный', 'симметричный', 'случайный', 1, 1, 1, 0, 2, 4),
(24, 'В чем суть прошивки деревьев?', 'быстрее осуществляется обход', 'быстрее добавлять новые элементы', 'быстрее удалять элементы', 'всё перечисленное', 1, 0, 0, 0, 2, 5),
(25, 'В чем преимущества и недостатки прошитых деревьев?', 'быстрее осуществляется обход', 'сложнее добавить новый элемент', 'не нужен стек для возврата', 'быстрее удалять элементы', 1, 1, 1, 0, 2, 5),
(26, '.Какова высота идеально сбалансированных деревьев?', 'log2(n)+1', 'log2(n+1)', 'log2(n)', 'ln(n)', 1, 0, 0, 0, 2, 6),
(27, 'Какие бинарные деревья называются оптимальными?', 'высота левого поддерева каждого узла отличается от высоты правого поддерева не более чем на 1', 'высота левого поддерева равна высоте правого поддерева', 'количество узлов правого поддерева почти равно количеству узлов левого поддерева', 'количество узлов правого поддерева равно количеству узлов правого поддерева', 1, 0, 0, 0, 2, 2),
(28, 'Какие деревья называются АВЛ-деревьями?', 'высота левого поддерева каждого узла от высоты правого поддерева каждого узла не более чем на 1', 'показатель сбалансированности равен 0,-1,1', 'показатель сбалансированности равен -1,1', 'количество узлов правого поддерева равно количеству узлов правого поддерева', 0, 1, 0, 0, 3, 7),
(29, 'Какое дерево называется деревом Фнббоначи?', 'высота левого поддерева каждого узла от высоты правого поддерева каждого узла не более чем на 1', 'показатель сбалансированности равен 0,-1,1', 'показатель сбалансированности равен -1,1', 'количество узлов правого поддерева равно количеству узлов правого поддерева', 0, 0, 1, 0, 3, 8),
(30, 'Чему равен показатель сбалансированности АВЛ-дерева?', 'высота левого поддерева каждого узла от высоты правого поддерева каждого узла не более чем на 1', 'показатель сбалансированности равен 0,-1,1', 'показатель сбалансированности равен -1,1', 'количество узлов правого поддерева равно количеству узлов правого поддерева', 0, 0, 1, 0, 3, 7),
(31, 'Чему равна максимальная высота АВЛ-дерева?', '1,4404log2(n+2)-0,328>h>log2(n+1)', 'log2(n+2)', 'log2(n+1)', 'log2(n)', 1, 0, 0, 0, 3, 7),
(32, 'Чему равен корневой баланс ВВ-дерева?', 'p(Tn)=(n1+1)/(n+1)', 'p(Tn)=(n1+2)/(n+2)', 'p(Tn)=(n1)/(n)', 'p(Tn)=(n1+1)*(n+1)', 1, 0, 0, 0, 3, 9),
(33, 'Какие типы деревьев Можно отнести к п-арным деревьям?', 'N-арное дерево (неориентированное) — это дерево (обычное, неориентированное), в котором степени вершин не превосходят N+1.', 'N-арное дерево (ориентированное) — это ориентированное дерево, в котором исходящие степени вершин (число исходящих рёбер) не превосходят N.', 'N-арное дерево (неориентированное) — это дерево (обычное, неориентированное), в котором степени вершин не превосходят N.', 'N-арное дерево (ориентированное) — это ориентированное дерево, в котором исходящие степени вершин (число исходящих рёбер) не превосходят N+1.', 1, 1, 0, 0, 3, 10),
(34, 'Какова структура узла n-арного дерева?', 'Для любых трёх вершин дерева, пути между парами этих вершин имеют ровно одну общую вершину', 'Дерево не имеет кратных рёбер и петель.', 'Любое дерево однозначно определяется расстояниями (длиной наименьшей цепи) между его концевыми (степени 1) вершинами.', 'Исходящие степени вершин (число исходящих рёбер) не превосходят N+1.', 1, 1, 1, 0, 3, 10),
(35, 'Какие разновидности сильно ветвящихся деревьев Вы знаете?', '2-3', '2-3-4', 'дерево хаффмана', 'авл', 1, 1, 0, 0, 4, 11),
(36, 'Какова структура сильноветвящегося дерева?', 'если считать, что степень некоторого узла упорядоченного дерева равна n>2, то он содержит n-1 ключей  и  n указателей', 'если считать, что степень некоторого узла упорядоченного дерева равна n, то он содержит n+1 ключей  и  n+2 указателей ', 'если считать, что степень некоторого узла упорядоченного дерева равна n>2, то он содержит n ключей  и  n+1 указателей ', 'если считать, что степень некоторого узла упорядоченного дерева равна n>0, то он содержит n-1 ключей  и  n-2 указателей ', 1, 0, 0, 0, 4, 11),
(37, 'Какие разновидности сильно ветвящихся деревьев Вы знаете?', '2-3', '2-3-4', 'дерево хаффмана', 'авл', 1, 1, 0, 0, 4, 11),
(38, 'Какова структура сильноветвящегося дерева?', 'если считать, что степень некоторого узла упорядоченного дерева равна n>2, то он содержит n-1 ключей  и  n указателей', 'если считать, что степень некоторого узла упорядоченного дерева равна n, то он содержит n+1 ключей  и  n+2 указателей ', 'если считать, что степень некоторого узла упорядоченного дерева равна n>2, то он содержит n ключей  и  n+1 указателей ', 'если считать, что степень некоторого узла упорядоченного дерева равна n>0, то он содержит n-1 ключей  и  n-2 указателей ', 1, 0, 0, 0, 4, 11),
(39, 'Какие преимущества и недостатки у сильноветвящегося дерева по сравнению с бинарным деревом?', 'гибкое вставление ключей', 'гибкое удаление ключей', 'для поиска требуется больше сравнений', 'для поиска требуется меньше сравнений', 1, 1, 1, 0, 4, 11),
(40, 'Какие деревья называются (2-3)-деревьями? ', 'Упорядоченное дерево, каждый узел которого содержит 2 или 3 связи, а все листья расположены на 1 уровне,', 'Упорядоченное дерево, каждый узел которого содержит 2 или 3 связи', 'Упорядоченное дерево, каждый узел которого содержит 3 связи, а все листья расположены на 2 уровнях', 'Упорядоченное дерево, каждый узел которого содержит 2 связи, а все листья расположены на 3 уровнях', 1, 0, 0, 0, 4, 12),
(41, 'Упорядоченное дерево, каждый узел которого содержит 2 связи, а все листья расположены на 3 уровнях', 'вставляемый ключ всегда помещается в лист. Если  лист уже содержит 2 ключа, ключ со средним значением перемещается вверх, а оставшиеся ключи делятся на 2 узла. ', 'вставляемый ключ всегда помещается в корень', 'вставляемый ключ всегда помещается в лист. ', 'вставляемый ключ всегда помещается в корень Если  корень уже содержит 2 ключа, ключ со средним значением перемещается вниз.', 1, 0, 0, 0, 4, 12),
(42, 'sdf', '234', '234', '234', '234', 0, 0, 0, 1, 100, 213),
(43, 'ё12', '123', '123213', '213', '444', 0, 0, 0, 1, 100, 2323),
(44, '2652435', '6636', '222', '43252', '2435345', 0, 1, 0, 0, 100, 234);

-- --------------------------------------------------------

--
-- Структура таблицы `test`
--

CREATE TABLE IF NOT EXISTS `test` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `pack1` varchar(255) NOT NULL,
  `koef1` float NOT NULL,
  `bilo4` int(11) NOT NULL,
  `bilo1` int(11) NOT NULL,
  `pack2` varchar(255) CHARACTER SET cp1251 COLLATE cp1251_general_cs NOT NULL,
  `koef2` float NOT NULL,
  `bilo2` int(11) NOT NULL,
  `pack3` varchar(255) CHARACTER SET cp1251 COLLATE cp1251_general_cs NOT NULL,
  `koef3` float NOT NULL,
  `bilo3` int(11) NOT NULL,
  `pack4` varchar(255) CHARACTER SET cp1251 COLLATE cp1251_general_cs NOT NULL,
  `koef4` float NOT NULL,
  `kosyak` varchar(255) CHARACTER SET cp1251 COLLATE cp1251_general_cs NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- Дамп данных таблицы `test`
--

INSERT INTO `test` (`id`, `pack1`, `koef1`, `bilo4`, `bilo1`, `pack2`, `koef2`, `bilo2`, `pack3`, `koef3`, `bilo3`, `pack4`, `koef4`, `kosyak`) VALUES
(1, '0', 1, 0, 0, '0', 1, 0, '0', 1, 0, '0', 1, '0');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
